################################################################################
################################################################################
###    Profile is not maintained anymore. Use "fastbike_longdistance.brf"    ###
################################################################################
################################################################################

#
# A fastbike could be a racing bike or a speed pedelec.
# But also at night or in rainy whether you might want
# to fallback to this one.
#
# Structure is similar to trekking.brf, see this for documenation.
# 

---context:global   # following code refers to global config

# Use the following switches to change behaviour
# (1=yes, 0=no):

assign   consider_elevation   	1   # set to 0 to ignore elevation in routing
assign   turnInstructionMode  	1  	# 0=none, 1=auto-choose, 2=locus-style, 3=osmand-style, 4=comment-style, 5=gpsies-style								

# additional cost for surface (paved = 0.0)	  
assign	 PavingStoneCost		 0.2
assign   FineGravelCost			 1.75
assign   CobblestoneCost  		 2.0	
assign   UnpavedCost    		10.0
assign   PavingUnsureCost 		 1.5

assign   PushCost			    4.0				# for 20km/h by bike and 4km/h by foot --> (4 + 1) times the time needed

assign   IntialFerryCost		10000			# no ferries allowed

# node costs
assign	SpeedBumpCost			20
assign	TrafficSignalCost		75
assign	TurnCostValue			150		
		
# the elevation parameters
assign downhillcost   switch consider_elevation 60 0
assign downhillcutoff 1.5
assign uphillcost 	  100	# upphillcost 100 --> 1 percent additional elevation is 1.0km distance equivalence
assign uphillcutoff   7

# set that this is a bike profile
assign   validForBikes       	1


# classifier constants
assign classifier_none     = 1
assign classifier_ferry    = 2


---context:way   # following code refers to way-tags

# logical if way is part of a cycleroute
assign any_cycleroute 	 
	or route_bicycle_icn=yes 
	or route_bicycle_ncn=yes 
	or route_bicycle_rcn=yes 
	   route_bicycle_lcn=yes

# if way is part of cycleroute, all nodes can be accessed
assign nodeaccessgranted 
	or any_cycleroute 
	   lcn=yes
			
#
# this is the cost (in Meter) for a 90-degree turn
# The actual cost is calculated as turncost*cos(angle)
#
assign turncost = if junction=roundabout then 0
                  else TurnCostValue

#
# for any change in initialclassifier, initialcost is added once
#
assign initialclassifier =
     if route=ferry then classifier_ferry
     else classifier_none
				  
#
# calculate the initial cost
# this is added to the total cost each time the costfactor
# changed
#
assign initialcost =
     if ( equal initialclassifier classifier_ferry ) then IntialFerryCost
     else 0


#
# implicit access here just from the motorroad tag
# (implicit access rules from highway tag handled elsewhere)
#
assign defaultaccess =
	if access=private|no then false
	else true

#
# bike access
#
assign bikeaccess
	if any_cycleroute then true
	else if bicycle= then
	(
		if vehicle= then
			if      highway=footway|pedestrian|steps then false
			else if foot=designated                  then false			# there are ways without vehicle or bicycle tag which are only a designated foot way.
			else defaultaccess
		else not vehicle=private|no
	)
	else not bicycle=private|no|dismount

#
# foot access
#
assign footaccess =
	if bikeaccess then true
	else if bicycle=dismount then true
	else if foot= then defaultaccess
	else not foot=private|no

#
# if not bike-, but foot-acess, just a moderate penalty,
# otherwise access is forbidden
#
assign accesspenalty =
	if bikeaccess then 0
	else if footaccess then PushCost
	else 100000

#
# handle one-ways. On primary roads, wrong-oneways should
# be close to forbidden, while on other ways we just add
# PushCost to the costfactor (making it at least PushCost - you are allowed
# to push your bike)
#
assign badoneway =
       if reversedirection=yes then					
         if oneway:bicycle=yes then true			
         else if oneway= then junction=roundabout
         else oneway=yes|true|1
       else oneway=-1

assign onewaypenalty =
       if ( badoneway ) then
       (
         if      ( cycleway=opposite|opposite_lane|opposite_track 		) then 0
         else if ( cycleway:left=opposite|opposite_lane|opposite_track 	) then 0
         else if ( cycleway:right=opposite|opposite_lane|opposite_track ) then 0
         else if ( oneway:bicycle=no                               		) then 0	# oneway allowed for bikes
         else if ( highway=primary|primary_link                    		) then 50
         else if ( highway=secondary|secondary_link                		) then 30
         else if ( highway=tertiary|tertiary_link                  		) then 20
         else PushCost
       )
       else 0.0

#
# Handle different surfaces
#	   
assign ispaved            or surface=paved or surface=asphalt or surface=concrete ( and surface= tracktype=grade1 )
assign ispavingstone	  surface=paving_stones
assign iscopplestone      surface=cobblestone|sett   
assign isgravel			  surface=fine_gravel     
assign ispavingunsure     and surface= not tracktype=grade1|grade2|grade3|grade4|grade5|
assign isunpaved      not or ispaved or ispavingstone or iscopplestone or isgravel ispavingunsure 

assign surfacecost	# 23Mio tags (11-2018) - https://taginfo.openstreetmap.org/keys/surface#values
	switch ispaved 		  0.0
	switch ispavingstone  PavingStoneCost
	switch iscopplestone  CobblestoneCost
	switch isgravel		  FineGravelCost
	switch isunpaved      UnpavedCost
	# best guess for unsure paving
	switch highway=motorway|motorway_link   0.0					# Autobahn und Auffahrten
	switch highway=trunk|trunk_link      	0.0					# Schnellstraßen (wie BAB) und Auffahrten
	switch highway=primary|primary_link    	0.0					# Bundesstraßen und Auffahrten
	switch highway=secondary|secondary_link	0.0					# Landstraßen und Auffahrten
	switch highway=tertiary|tertiary_link   0.0					# Kreisstraßen und Auffahrten
	switch highway=unclassified       		0.0					# Dorfstraßen	  
	switch highway=residential 				0.0					# Wohnstraße
	switch highway=living_street 			PavingStoneCost		# Spielstraße
	switch highway=service                  PavingUnsureCost	# Zugangsstraßen
	switch highway=pedestrian   			PavingUnsureCost	# Fußgängerzone
	switch highway=bridleway                PavingUnsureCost	# Reit- und Fußweg
	switch highway=cycleway                 PavingUnsureCost	# Radweg
	switch highway=footway  				PavingUnsureCost	# Gehweg
	switch highway=path  					PavingUnsureCost	# Pfad unbekannten Typs
	switch highway=track 					PavingUnsureCost	# Feldweg
	switch highway=road						PavingUnsureCost	# unbekannter Typ
	PavingUnsureCost

assign smoothnesscost	# 1.34 Mio tags (11-2018) - https://taginfo.openstreetmap.org/keys/smoothness#values
	# http://wiki.openstreetmap.org/wiki/Key:smoothness
	switch smoothness=excellent|very_good				 	0.0				# thin_rollers - roller blade, skate board
	switch smoothness=good		 						 	PavingStoneCost	# thin_wheels - racing bike
	switch smoothness=intermediate            			 	FineGravelCost	# wheels - city bike, wheel chair, sport cars
	switch smoothness=bad|robust_wheels       			 	CobblestoneCost	# robust wheels - trekking bike, normal cars
	switch smoothness=very_bad|high_clearance 			 	UnpavedCost		# high clearance - normal cars with slightly higher clearance
	switch smoothness=horrible|off_road_wheels	multiply 2	UnpavedCost		# off road wheels - off road cars 
	switch smoothness=very_horrible           	multiply 3	PushCost		# specialized off road vehicles - ATV, tractor
	switch smoothness=impassable              	multiply 5	PushCost		# no wheeled vehicle - hiking path 
															surfacecost		# not known
												
# use mean value of both, otherwise it is penalized twice
assign mean_surface_smoothness_cost
	multiply 0.5 add surfacecost smoothnesscost
		
#
# Different kind of highways
#	   
assign highwaycost	# 128 Mio tags,  (11-2018) - https://taginfo.openstreetmap.org/keys/smoothness#values
	
	# disallow non existing highways, motorways and motorroads
	switch and highway= not route=ferry  				10000	# exclude rivers, rails etc.
	switch    highway=proposed|abandoned|construction   10000	# Baustellen 
	
	#
	# all other exclusions below (access, steps, ferries,..)
	# should not be deleted by the decoder, to be available
	# in voice-hint-processing (if cost are >=10000, the decoder will delete them)

	# highway cost
	switch highway=motorway|motorway_link    						 	 9999		# Autobahn (BAB) und Auffahrten
	switch motorroad=yes											  	 9999		# Kraftfahrstraße (wie BAB)
	switch highway=trunk|trunk_link      								   10		# Schnellstraßen (wie BAB) und Auffahrten
	switch highway=primary|primary_link     switch any_cycleroute	0.4		1.1		# Bundesstraßen und Auffahrten
	switch highway=secondary|secondary_link switch any_cycleroute	0.25	0.6		# Landstraßen und Auffahrten
	switch highway=tertiary|tertiary_link   switch any_cycleroute	0.1		0.1		# Kreisstraßen und Auffahrten
	switch highway=unclassified       		switch any_cycleroute	0.1		0.2		# Dorfstraßen	  
	switch highway=residential 				switch any_cycleroute	0.15	0.3		# Wohnstraße
	switch highway=service                  switch any_cycleroute	0.2		0.4 	# Zugangsstraßen
	switch highway=living_street 			switch any_cycleroute	0.3		0.6		# Spielstraße
	switch highway=pedestrian   			switch any_cycleroute	0.4		0.8		# Fußgängerzone
	switch highway=bridleway                switch any_cycleroute	1.1		2.1		# Reit- und Fußweg
	switch highway=cycleway                 switch any_cycleroute	0.0		0.0		# Radweg
	switch highway=footway  				switch any_cycleroute	0.6		0.8		# Gehweg
	switch highway=path  					switch any_cycleroute	0.2		0.4		# Pfad 
	switch highway=track 					switch any_cycleroute	0.0		0.1		# Feldweg
	switch highway=road						switch any_cycleroute	0.2		0.4		# unbekannter Typ
	switch route=ferry                      switch any_cycleroute	5.67	5.67	# Fähren
	switch highway=steps                    						       10.0		# Treppen
																			0.3		# Default						


#
# Traffic Penalties
#

# There is any cycleway
assign hascycleway			# 750 000 tags "cycleway", 60 000 tags "cycleway:left", 140 000 tags "cycleway:right" (11-2018)
	not and ( or cycleway=  cycleway=no|shared_lane|proposed ) 
		or  ( and     reversedirection=yes or cycleway:left=  cycleway:left=no|shared_lane   )		# shared lane are only bike signs on the street surface but no real bike lanes
		    ( and not reversedirection=yes or cycleway:right= cycleway:right=no|shared_lane  )
			
assign hascycleway_track	# protected bike lanes
	or ( cycleway=track ) 	# 114 000 tags "cycleway=track"
	or ( and     reversedirection=yes or cycleway:left=track|opposite_track or cycleway:right=opposite_track  cycleway=opposite_track )		
	   ( and not reversedirection=yes    cycleway:right=track )
# https://taginfo.openstreetmap.org/keys/cycleway
# 114 000 tags "cycleway=track"
#  36 000 tags "cycleway:right=track"
#  14 000 tags "cycleway:left=track"
#   2 000 tags "cycleway=opposite_track"
#     300 tags "cycleway:right=opposite_track"
#     350 tags "cycleway:left=opposite_track", 
			
assign trafficpenalty_before_cycleway
	if highway=primary|primary_link then
	(
	  if      estimated_traffic_class=4   then 0.2
	  else if estimated_traffic_class=5   then 0.4
	  else if estimated_traffic_class=6|7 then 0.6
	  else 0
	)
	else if highway=secondary|secondary_link then
	(
	  if      estimated_traffic_class=3   then 0.2
	  else if estimated_traffic_class=4   then 0.4
	  else if estimated_traffic_class=5   then 0.6
	  else if estimated_traffic_class=6|7 then 1.0
	  else 0
	)
	else if highway=tertiary|tertiary_link then
	(
	  if      estimated_traffic_class=2     then 0.1
	  else if estimated_traffic_class=3     then 0.3
	  else if estimated_traffic_class=4     then 0.5
	  else if estimated_traffic_class=5|6|7 then 1.0
	  else 0
	)
	else 0

# Treat traffic penalty differently for cycling lanes		
assign trafficpenalty multiply trafficpenalty_before_cycleway 
	switch hascycleway_track	0.10
	switch hascycleway 			0.25 
	1.0
	
#
# calculate the cost-factor, which is the factor
# by which the distance of a way-segment is multiplied
# to calculate the cost of that segment. The costfactor
# must be >=1 and it's supposed to be close to 1 for
# the type of way the routing profile is searching for
#
assign costfactor
	#
	# exceptions with sub-cost below 10000 (motorway, bad one-way, ...)  should not be deleted
	# by the decoder, to be available in voice-hint-processing (if cost are >=10000, the decoder will delete them)
	switch 
		greater 					# if any penalty ...
			max onewaypenalty
			max accesspenalty 
				highwaycost
		9999 						# ... is larger 9999 ...
		10000						# ... then take 10000 (forbidden) ...
									# ... else take the following:
	min 9999								# make sure that costfactor is less or equal 9999
	add 1									# one is the minimum cost
	add max onewaypenalty accesspenalty		# oneway and access penalty
	add mean_surface_smoothness_cost		# surface and smoothness cost
	    highwaycost							# cost for different types of highway
	
	
# Treat traffic penalty differently for up and downhills
assign uphillcostfactor   add multiply 3.00 trafficpenalty costfactor
assign downhillcostfactor add multiply 0.25 trafficpenalty costfactor
assign costfactor 		  add multiply 1.00 trafficpenalty costfactor

# way priorities used for voice hint generation

assign priorityclassifier =

  if      ( highway=motorway                  ) then  30
  else if ( highway=motorway_link             ) then  29
  else if ( highway=trunk                     ) then  28
  else if ( highway=trunk_link                ) then  27
  else if ( highway=primary                   ) then  26
  else if ( highway=primary_link              ) then  25
  else if ( highway=secondary                 ) then  24
  else if ( highway=secondary_link            ) then  23
  else if ( highway=tertiary                  ) then  22
  else if ( highway=tertiary_link             ) then  21
  else if ( highway=unclassified              ) then  20
  else if ( highway=residential|living_street ) then  6
  else if ( highway=service                   ) then  6
  else if ( highway=cycleway                  ) then  6
  else if ( bicycle=designated                ) then  6
  else if ( highway=track                     ) then if tracktype=grade1 then 6 else 4
  else if ( highway=bridleway|road|path|footway ) then  4
  else if ( highway=steps                     ) then  2
  else if ( highway=pedestrian                ) then  2
  else 0


# some more classifying bits used for voice hint generation...

assign isbadoneway = not equal onewaypenalty 0
assign isgoodoneway = if reversedirection=yes then oneway=-1
                      else if oneway= then junction=roundabout else oneway=yes|true|1
assign isroundabout = junction=roundabout
assign islinktype = highway=motorway_link|trunk_link|primary_link|secondary_link|tertiary_link
assign isgoodforcars = if greater priorityclassifier 6 then true
                  else if highway=residential|living_street|service then true
                  else if ( and highway=track tracktype=grade1 ) then true
                  else false

---context:node  # following code refers to node tags


assign defaultaccess
       switch access=
              1 # add default barrier restrictions here!
              switch or access=private access=no
                     0
                     1

assign bikeaccess
       or nodeaccessgranted=yes
          switch bicycle=
                 switch vehicle=
                        defaultaccess
                        switch or vehicle=private vehicle=no
                               0
                               1
                 switch or bicycle=private or bicycle=no bicycle=dismount
                        0
                        1

assign footaccess
       or bicycle=dismount
          switch foot=
                 defaultaccess
                 switch or foot=private foot=no
                        0
                        1

# Assign Cost to node:
assign initialcost
  switch bikeaccess
    0 
    switch footaccess
      300
      1000000

#
# Cost for traffic lights
#
assign istrafficsignal	
	or highway=traffic_signals crossing=traffic_signals 

assign initialcost 
	add initialcost
	add	switch istrafficsignal					TrafficSignalCost	0
		switch traffic_calming=bump|hump|dip	SpeedBumpCost		0
	
																					
